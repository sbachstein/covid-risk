{"version":3,"sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js"],"names":["setupDefaultRules","ic","this","_root","interfaceColors","language","r","rule","bind","setAll","colors","ColorSet","paddingLeft","paddingRight","paddingTop","paddingBottom","panX","panY","wheelStep","arrangeTooltips","saturation","fillOpacity","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","states","create","strokeOpacity","inside","minGridDistance","opacity","centerY","minPosition","maxPosition","fontSize","text","populateText","centerX","visible","behavior","layer","exportable","snapToSeriesBy","strokeDasharray","start","end","minZoomCount","maxZoomCount","Infinity","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","opposite","inversed","cellStartLocation","cellEndLocation","width","height","cursorOverStyle","isMeasured","position","startLocation","endLocation","fillRule","dataItem","index","axisFill","get","setPrivate","gridIntervals","timeUnit","count","dateFormats","translate","periodChangeDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","axis","component","value","endValue","intervalDuration","baseInterval","getPrivate","min","Date","locale","firstDayOfWeek","utc","undefined","timezone","getTime","val","Math","round","baseValue","logarithmic","extraMin","extraMax","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","parent","h","w","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","Theme","List","chartContainer","children","push","Container","layout","verticalLayout","horizontalLayout","yAxesAndPlotContainer","maskContent","plotContainer","Button","themeTags","icon","Graphics","x","y","_defaultThemes","XYChartDefaultTheme","new","_afterNew","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","Rectangle","fill","Color","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","shiftY","deltaY","shiftX","deltaX","each","fixPosition","newStart","newEnd","_handleWheelAnimation","zoom","dispose","local","_downPoint","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","_isPanning","downPoint","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","cursor","snapToSeries","isHidden","isHiding","startIndex","endIndex","i","dataItems","point","distance","abs","hypot","tooltip","_setDataItem","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","topAxesContainer","e","_handleScrollbar","getIndex","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","insertIndex","oldValue","Error","newIndex","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","indexOf","setRaw","updateGrips","show","hide","otherCharts","_otherCharts","global","length","chart","chartPlotContainer","closest","closestPoint","plotT","_display","plotB","tooltips","sum","minDistance","movePoint","_movePoint","maxTooltipDistance","tooltipSeries","hidden","inPlot","_tooltipToLocal","tooltipContainer","sort","a","b","reverse","Percent","top","bottom","_fy","max","SerialChart","XYChart","className","_settings","_drawLines","setTimeout","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_updateChildren","_getPoint","lineX","animate","key","to","duration","easing","lineY","_handleMove","_handleCursorDown","_handleCursorUp","native","_downPoints","selection","rootPoint","_inPlot","_getPosition","charAt","userPositionX","userPositionY","lastPoint","_lastPoint","skipEvent","alwaysShow","xyPos","xy","_handleCursorPosition","handleCursorShow","_updateLines","_updateSelection","handleCursorHide","_onHide","_onShow","_dispose","XYCursor","AxisLabel","AxisLabelRadial","ticks","template","grid","axisFills","labels","tick","make","labelsContainer","label","axisLength","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","downStart","downEnd","extra","_getPan","_point1","_point2","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","AxisRenderer","AxisTick","_beforeChanged","isPrivateDirty","Grid","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","len","inited","_createGraphics","_ph","_pw","baseAxis","columnsTemplate","columns","clusterCount","BaseColumnSeries","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","_toggleColumn","_updateGraphics","_skipped","graphics","_makeGraphics","legendDataItem","markerRectangle","stroke","axisRanges","axisRange","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","vcy","vcx","offset","getDataItemPositionX","getDataItemPositionY","stackToItemY","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","t","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","_dataItems","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","disposeDataItem","list","promises","hideDataItem","Promise","all","bullets","bullet","showDataItem","column","setting","_getTooltipTarget","strokes","fills","_fillGenerator","y0","p","x0","y1","x1","mainContainer","_strokeTemplate","_fillTemplate","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","dataContext","_valueFields","field","_endIndex","_clearGraphics","_startSegment","clear","segmentIndex","dataItemIndex","currentEndIndex","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","xOpenFieldValue","yOpenFieldValue","baseField","basePosX","basePosY","segments","points","fillVisible","getOpen","o","_getPoints","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","_points","_firstPoint","segment","context","_processAxisRange","_dataItem","marker","legendStroke","legendFill","disabledColor","bulletFunction","LineSeries","fields","valueFields","_setRawDefault","_removeAxisRange","axisDataItem","_seriesAxisRanges","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","xName","xCapName","yName","yCapName","xLetter","yLetter","open","low","high","_xLowField","_xHighField","_yLowField","_yHighField","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_fixVC","_dataProcessed","_stack","_unstack","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","minBulletDistance","_showBullets","_psi","_pei","_selectionProcessed","_calculateTotals","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mask","_markDirtyKey","_makeRangeMask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","s","stackToSeries","stackToItem","stackValue","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","updateLegendMarker","_afterDataChange","_aggregatesCalculated","_clearDirty","_shouldShowBullet","_positionX","_positionY","id","_dataSets","_markDataSetDirty","_dataSetId","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","stackedSeries","_markDirtyStack","_afterChanged","_markDirtyAxes","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","XYSeries","that","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","custom","cardinal","interactive","interactiveChildren","_addOrientationClass","orientation","startGrip","endGrip","remove","_updateThumb","overlay","Scrollbar","XYChartScrollbar","background","axisHeader","renderer","processAxis","ghostLabel","makeLabel","sAnimation","_sAnimation","eAnimation","_eAnimation","priority","minZoomFactor","playing","_series","_createAssets","_rangesDirty","_prepareDataItem","above","_index","_updateCursor","delta","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","_handleAxisSelection","onPrivate","markDirtySize","_toggleDataItem","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_updateChartLayout","_updatePositions","bounds","localBounds","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","roundAxisPosition","_updateTooltipText","positionTooltip","_location","_fields","coordinate","_nextItem","_autoGapCount","_fieldName","Component","Axis","_itemMap","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","startCategory","endCategory","CategoryAxis","openKey","otherAxis","startDataItem","endDataItem","maxCount","Number","MAX_SAFE_INTEGER","frequency","ceil","floor","_frequency","j","f","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateGrid","updateTick","updateFill","updateBullet","cellLocation","_axisLocation","category","axisPositionToIndex","fieldName","seriesDataItem","zoomToIndexes","classNames","concat","startTime","endTime","realDuration","baseDuration","gridInterval","nextGridUnit","format","formats","previousValue","previousIndex","previousUnitValue","selectedItems","changed","skip","date","unitValue","added","pop","shouldAdd","item","dateFormatter","CategoryDateAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","_getMinMax","_getSelectionMinMax","_groupData","_baseValue","numberFormat","formatter","getNumberFormatter","selectionMin","selectionMax","processDataItem","_formatText","log","LOG10E","pow","stepPower","decCount","valueToPosition","hasTag","removeTag","positionToValue","gridCount","minMaxStep","_adjustMinMax","stepDecimalPlaces","E","treatZeroAs","_cellLocation","axisLocation","fixSmallStep","total","minDefined","maxDefined","seriesMin","seriesMax","isShowing","_minReal","_maxReal","_deltaMinMax","minMaxStep2","_syncAxes","valueToFinalPosition","minDiff","diff","minAdapted","adapters","fold","maxAdapted","_fixMin","_fixMax","exponent","power","strict","animatePrivate","strictMode","initialMin","initialMax","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","ValueAxis","_setBaseInterval","interval","_baseDuration","baseMainDuration","groupInterval","setDataSet","_mainDataItems","mainDataSetId","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_groupingCalculated","modifiedDifference","current","_strictMode","_intervalDuration","intervals","_date","close","_updateDates","openValue","closeValue","result","diValue","first","second","value1","zoomToValues","DateAxis","dates","_dates","found","itemValue","findex","_updateAllDates","valueToIndex","GaplessDateAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","DurationAxis","Entity","AxisBullet","gridTemplate","axisChildren","point1","point2","_ls","_lc","innerWidth","toggleVisibility","fillDrawMethod","_positionTooltip","num","pointerOrientation","oldBounds","AxisRendererX","innerHeight","AxisRendererY","_draw","RoundedRectangle","Candlestick","Template","ColumnSeries","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","getRaw","_updateCandleGraphics","CandlestickSeries","lY","hX","OHLC","OHLCSeries","_setDefault","SmoothedYLineSeries","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_t","stepAfter","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","StepLineSeries","am5xy"],"mappings":"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","file":"xy.js","sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 20,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\"),\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\textraMin: 0,\r\n\t\t\textraMax: 0,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n","import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $type from \"../../core/util/Type\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\n\t\t// TODO: handle multitouch\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number) {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX && !scrollbarX.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY && !scrollbarY.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this._otherCharts;\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(global);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.reverse();\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\";\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 20\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\tthis.handleMove();\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tthis.lineX.animate({ key: \"x\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tthis.lineY.animate({ key: \"y\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t// we're not dragging.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tprevious = dataItem;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.strokes.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.fills.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(this._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * @todo review\n\t */\n\tgroupDataDisabled?: boolean;\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tprotected _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (!this.get(\"xAxis\").inited || !this.get(\"yAxis\").inited) {\n\t\t\treturn false\n\t\t}\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tvalue._markDirtyStack();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tlet priority: \"start\" | \"end\" = \"end\";\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactor / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactor / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tlet sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\tlet eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\t\t\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\n\t/**\n\t * @todo needs description\n\t * Can be called when axis zoom changes and you need to update tooltip position\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif(endIndex - startIndex < maxCount){\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n//import * as $order from \"../../../core/util/Order\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis fooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n\tminFinal?: number;\n\tmaxFinal?: number;\n\tselectionMin?: number;\n\tselectionMax?: number;\n\tselectionMinFinal?: number;\n\tselectionMaxFinal?: number;\n\tselectionStepFinal?: number;\n\tstep?: number;\n\tstepDecimalPlaces?: number;\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = selectionMin;\n\t\t\t}\n\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet differencePower = Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E;\n\t\t\t\t\tif (differencePower > 1) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(min) * Math.LOG10E + i);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tconst extraMin = this.get(\"extraMin\", 0);\n\t\tconst extraMax = this.get(\"extraMax\", 0);\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\n\t\tconst strictMinMax = this.get(\"strictMinMax\", false);\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", series.getPrivate(\"minX\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", series.getPrivate(\"maxX\"));\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", series.getPrivate(\"minY\"));\n\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", series.getPrivate(\"maxY\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet start = this.valueToFinalPosition(selectionMin);\n\t\t\tlet end = this.valueToFinalPosition(selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\treturn;\n\t\t}\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// the number by which we need to raise 10 to get difference\n\t\t\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\t\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t\t\t// reduce this number by 10 times\n\t\t\t\tpower = power / 10;\n\n\t\t\t\tthis._deltaMinMax = power;\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\n\t\tlet strict = this.get(\"strictMinMax\");\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (this.get(\"strictMinMax\")) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", (max - min) / minDiff * this.get(\"maxZoomFactor\", 100));\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\tif (!logarithmic) {\n\t\t\t// round down min\n\t\t\tif (strictMode) {\n\t\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.ceil(max / power) * power;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t\t// round up max\n\t\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t\t}\n\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\t\t// logarithmic\n\t\telse {\n\t\t\tif (min <= 0) {\n\t\t\t\t//throw Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t\tmin = this.get(\"baseValue\", 0);\n\t\t\t}\n\n\t\t\tif (min === Infinity) {\n\t\t\t\tmin = 1;\n\t\t\t}\n\n\t\t\tif (max === -Infinity) {\n\t\t\t\tmax = 10;\n\t\t\t}\n\n\t\t\tmin = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));\n\t\t\tmax = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));\n\n\t\t\tif (this.get(\"strictMinMax\")) {\n\t\t\t\tlet minDefined = this.get(\"min\");\n\t\t\t\tlet maxDefined = this.get(\"max\");\n\t\t\t\tif ($type.isNumber(minDefined) && minDefined > 0) {\n\t\t\t\t\tmin = minDefined;\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(maxDefined) && maxDefined > 0) {\n\t\t\t\t\tmax = maxDefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\t\tif (!logarithmic) {\n\t\t\t// final min and max\n\t\t\tlet minCount = Math.floor(min / step);\n\n\t\t\tmin = $math.round(step * minCount, decCount);\n\n\t\t\tlet maxCount: number;\n\n\t\t\tif (!strictMode) {\n\t\t\t\tmaxCount = Math.ceil(max / step);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmaxCount = Math.floor(max / step);\n\t\t\t}\n\n\t\t\tif (maxCount === minCount) {\n\t\t\t\tmaxCount++;\n\t\t\t}\n\n\t\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\t\tif (max < initialMax) {\n\t\t\t\tmax = max + step;\n\t\t\t}\n\n\t\t\tif (min > initialMin) {\n\t\t\t\tmin = min - step;\n\t\t\t}\n\t\t}\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"baseInterval\")) {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t}\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\t$array.eachContinue(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value !== undefined) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (series._dataSets[dataSetId].length < this.get(\"groupCount\", Infinity)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tconst selectionMin = this.getPrivate(\"selectionMin\");\n\t\tconst selectionMax = this.getPrivate(\"selectionMax\");\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tconst groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\t\t\tif (groupIntervals) {\n\t\t\t\t\t\tgroupInterval = $time.chooseInterval(0, modifiedDifference, this.get(\"groupCount\", Infinity), groupIntervals);\n\t\t\t\t\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\t\t\t\t\tgroupInterval = { ...baseInterval };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count))) {\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\t\t\t\t\tif (groupInterval) {\n\t\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tif (start.index > 0) {\n\t\t\t\t\t\tstart.index -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tseries.setPrivate(\"startIndex\", start.index);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", end.index);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")! as number;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! as number;\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, new Date(min), this._root.timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\tdataItem.show();\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\t\t\t\tdataItem.setRaw(\"endValue\", $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime()) //$time.round(new Date(value + intervalDuration * 1.1), gridInterval.timeUnit, gridInterval.count).getTime());\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\n\t\t\t\tvalue = $time.add(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.utc).getTime();\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis.dataItems[j].hide();\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\t/* goes up to the year\n\tprotected _getFormat(timeUnit: TimeUnit, value: number, previousValue: number) {\n\t\tconst formats = this.get(\"dateFormats\")!;\n\t\tlet format = formats[timeUnit];\n\n\t\tif (this.get(\"markUnitChange\")) {\n\t\t\tlet nextGridUnit = $time.getNextUnit(timeUnit);\n\n\t\t\twhile (nextGridUnit != undefined) {\n\n\t\t\t\tif (nextGridUnit) {\n\t\t\t\t\tif (timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![timeUnit];\n\t\t\t\t\t\t\ttimeUnit = nextGridUnit;\n\t\t\t\t\t\t\tnextGridUnit = $time.getNextUnit(nextGridUnit);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnextGridUnit = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn format;\n\t}\n\t*/\n\tprotected _fixMax(max: number) {\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tlet startTime = $time.round(new Date(max), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tdataItem.open = {};\n\t\tdataItem.close = {};\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\t\t\tlet endTime = $time.add(new Date(startTime), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\tdataItem.close![field] = endTime;\n\n\t\t\t\tthis._updateDates(startTime);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tvalue = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\n\t\tlet endValue = value;\n\t\tif (location > 0) {\n\t\t\tendValue = $time.add(new Date(value), baseInterval.timeUnit, baseInterval.count, this._root.utc).getTime();\n\t\t}\n\t\treturn this.valueToPosition(value + (endValue - value) * location);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\n\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\treturn this._root.dateFormatter.format(new Date(this.positionToValue(position)), this.get(\"tooltipDateFormat\", format));\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tvar diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t}\n\t\telse {\n\t\t\t// @todo check if is in range\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\tindex?: number\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * Creates a date axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\tif (!result.found) {\r\n\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst len = dates.length;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\r\n\t\t\treturn index / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic valueToIndex(value: number) {\r\n\t\tconst dates = this._dates;\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\r\n\t\tlet len = this._dates.length;\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex) * this.baseDuration();\r\n\t}\r\n\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis.dataItems[j].hide();\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime);\r\n\r\n\t\t\tif (endIndex - startIndex < maxCount) {\r\n\t\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\t\t\t}\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet previousIndex = -Infinity;\r\n\t\t\tlet previousUnitValue = -Infinity;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet changed = false;\r\n\t\t\t// 0, not a mistake, starting from start index is not good\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tlet index = i;\r\n\t\t\t\tlet skip = false;\r\n\r\n\t\t\t\tlet value = dates[i];\r\n\t\t\t\tlet date = new Date(value);\r\n\t\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\r\n\r\n\t\t\t\tlet shouldAdd = false;\r\n\t\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\r\n\t\t\t\t\tif (index - previousIndex >= frequency) {\r\n\t\t\t\t\t\tshouldAdd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (unitValue % gridInterval.count === 0) {\r\n\t\t\t\t\t\tif (unitValue != previousUnitValue) {\r\n\t\t\t\t\t\t\tshouldAdd = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (shouldAdd) {\r\n\t\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\r\n\t\t\t\t\t\tif (changed) {\r\n\t\t\t\t\t\t\tskip = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!skip) {\r\n\t\t\t\t\t\tselectedItems.push(i);\r\n\t\t\t\t\t\tpreviousIndex = index;\r\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchanged = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = -Infinity;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem.isHidden()) {\r\n\t\t\t\t\t\t\tdataItem.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\tdurationFormat: string;\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\tlet initialMin: number = min;\n\t\t\tlet initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivate(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\t\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\"\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\taxis.addTag(opposite);\t\t\t\t\t\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(\"opposite\");\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\tthumb.set(\"centerX\", p100);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\t\t\t\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\n\t\tthumb.setPrivate(\"width\", axis.labelsContainer.width());\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"y\", axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height()));\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet y = this.positionToCoordinate(position);\n\n\t\t\tgrid.set(\"y\", y);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\tlowX0?: number;\n\tlowY0?: number;\n\tlowX1?: number;\n\tlowY1?: number;\n\n\thighX0?: number;\n\thighY0?: number;\n\thighX1?: number;\n\thighY1?: number;\n\n\torientation?: \"horizontal\" | \"vertical\"\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\tcolumns: ListTemplate<Candlestick>\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\t\tthis.valueXFields.push(\"lowValueX\", \"highValueX\");\n\t\tthis.valueYFields.push(\"lowValueY\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\tcolumns: ListTemplate<OHLC>\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;"],"sourceRoot":""}